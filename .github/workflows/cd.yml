name: Release and Deploy

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release (via release-please)
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: simple
          package-name: spring-server-starter
          token: ${{ secrets.DYNO_TOKEN }}

  docker:
    name: Build and Push Docker Image
    needs: release
    if: ${{ needs.release.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Image to ECR
        run: |
          TAG=${{ needs.release.outputs.tag_name }}
          docker build -t ${{ secrets.ECR_REPO }}:$TAG .
          docker push ${{ secrets.ECR_REPO }}:$TAG

  deploy:
    name: Deploy to ECS
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster your-cluster-name \
            --service your-service-name \
            --force-new-deployment

  notify:
    name: Notify Slack
    needs: deploy
    uses: ./.github/actions/slack.yml
    with:
      job-status: ${{ needs.build.result }}
