name: Terraform CI

on:
  push:
    branches:
      - infra

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: infra/envs/prod

      - name: Terraform Validate
        run: terraform validate
        working-directory: infra/envs/prod

      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: infra/envs/prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.INFRA_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.INFRA_AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_bastion_key_name: ${{ secrets.TF_VAR_bastion_key_name }}

      # 실제 배포는 보통 main 브랜치에서만 하도록 분기 설정
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: infra/envs/prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.INFRA_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.INFRA_AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_bastion_key_name: ${{ secrets.TF_VAR_bastion_key_name }}


  notify:
    name: Notify Slack
    needs: terraform
    uses: ./.github/workflows/slack.yml
    with:
      job-status: ${{ needs.terraform.result }}
